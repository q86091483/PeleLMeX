#--------------------DOMAIN GEOMETRY------------------------------------------
geometry.is_periodic = 0 1 0               	# For each dir, 0: non-perio, 1: periodic
geometry.coord_sys   = 0                   	# 0 => cart, 1 => RZ
geometry.prob_lo = -17.500E-4  -2.000E-3   0.000E-3  # x_lo y_lo (z_lo)
geometry.prob_hi = +122.50E-4  +2.000E-3  +6.000E-3  # x_hi y_hi (z_hi)

#--------------------BNDY CONDITIONS-------------------------------------------
# Interior, Inflow, Outflow, Symmetry,
# SlipWallAdiab, NoSlipWallAdiab, SlipWallIsotherm, NoSlipWallIsotherm
peleLM.lo_bc = Inflow  Interior Inflow
peleLM.hi_bc = Outflow Interior NoSlipWallAdiab

#--------------------AMR CONTROL-----------------------------------------------
amr.n_cell          = 140 40 60        # Level 0 number of cells in each direction   
amr.v               = 2                # AMR verbose
amr.max_level       = 0                # maximum level number allowed
amr.ref_ratio       = 2 2 2 2          # refinement ratio
amr.regrid_int      = 2                # how often to regrid
amr.n_error_buf     = 2 2 2 2          # number of buffer cells in error est
amr.grid_eff        = 0.7              # what constitutes an efficient grid
amr.blocking_factor = 16               # block factor in grid generation (min box size)
amr.max_grid_size   = 64               # max box size

#--------------------PROBLEM PARAMETERS----------------------------------------
prob.P_mean = 405300
prob.V_j = 234.
prob.V_cf = 38.
prob.jet_rad = 2.5E-4
prob.jet_temp = 300.
prob.ox_temp = 750.
prob.XO2 = 2.1e-1
prob.XN2 = 7.9e-1
prob.jet_dir 	= 2
prob.cf_dir 	= 0
prob.other_dir 	= 1
prob.jet_purity = 1.0   		# Hydrogel vol. in jet
pmf.datafile 	= "initeq.dat" 		# Initial condition
prob.bl_thickness = 5.0e-5              # Width of tanh of jet/air mixing
prob.init_time 		= 1E-6		# Should not be too large.
prob.global_eq_ratio 	= 0.6   	# Not used
prob.pertmag_cf 	= 0.0 		# Not used
prob.pertmag_jet 	= 0.0 		# Not used
prob.double_jet 	= 0 		# Not used

prob.do_turbInlet = 1
prob.nxin = 129
prob.nyin = 65
prob.nzin = 130
prob.file_x = "turbin/channel.x"
prob.file_y = "turbin/channel.y"
prob.file_z = "turbin/channel.z"
prob.file_uvw = "turbin/channel.uvw"
#--------------------PeleLMeX CONTROL-----------------------------------------
peleLM.v = 3
peleLM.run_mode = normal	# [OPT, DEF=normal] Switch between time-advance mode (normal) or UnitTest (evaluate)
peleLM.advection_scheme = "Godunov_PLM" # [OPT, DEF=Godunov_PLM] Advection scheme: Godunov_PLM, Godunov_PPM or Godunov_BDS
peleLM.use_wbar = 1		# [OPT, DEF=1] Enable Wbar correction in diffusion fluxes
peleLM.deltaT_verbose = 2
#peleLM.deltaT_iterMax = 20      # [OPT, DEF=10] Maximum number of deltaT iterations
#peleLM.deltaT_tol = 5e-5        # [OPT, DEF=1.e-10] Tolerance of the deltaT solve
peleLM.deltaT_crashIfFailing = 0 # [OPT, DEF=1] Turn this off for production runs
peleLM.num_init_iter = 3        # [OPT, DEF=3] Number of iterations to get initial pressure
peleLM.num_divu_iter = 1        # [OPT, DEF=1] Number of divU iterations to get initial dt estimate
peleLM.do_init_proj = 0         # [OPT, DEF=1] Control over initial projection
peleLM.incompressible = 0       # [OPT, DEF=0] Enable to run fully incompressible, scalar advance is bypassed
peleLM.rho = 4.0
peleLM.mu = 3.0E-5

#--------------------TIME STEPPING---------------------------------------------
#amr.restart = chk_00100
amr.max_step = 2000
peleLM.sdc_iterMax = 2
#nodal_proj.verbose = 2
#mac_proj.verbose   = 2
nodal_proj.rtol = 5e-10
mac_proj.rtol   = 5e-10
diffusion.rtol  = 5E-10
peleLM.deltaT_tol = 5E-4
#transport.use_soret = 1

amr.plot_int = 100
amr.check_int = 100
amr.cfl = 0.4
amr.check_file	= "chk_"
amr.plot_file 	= "plt_"
amr.derive_plot_vars 	= avg_pressure mag_vort mass_fractions HeatRelease mixture_fraction
amr.dt_shrink 		= 1e-2
amr.dt_change_max = 10.0     # [OPT, DEF=1.1] maximum dt change between consecutive steps
imr.stop_time 		= 10.0
#amr.init_dt = 1e-1
#amr.fixed_dt = 1e-3

#--------------------CHEMISTRY INTEGRATOR---------------------------------------
peleLM.chem_integrator = "ReactorNull"
peleLM.use_typ_vals_chem = 1          # Use species/temp typical values in CVODE   
peleLM.typical_values_reset_int = 10   # [OPT, DEF=10] Frequency at which the typical values are updated
ode.rtol = 1.0e-6                     # Relative tolerance of the chemical solve
ode.atol = 1.0e-6                     # Absolute tolerance factor applied on typical values
cvode.solve_type = denseAJ_direct     # CVODE Linear solve type (for Newton direction) 
cvode.max_order  = 4                  # CVODE max BDF order. 

#-------------------------LINEAR SOLVERS---------------------------------------
#nodal_proj.verbose = 1                      # [OPT, DEF=0] Verbose of the nodal projector
#nodal_proj.rtol = 1.0e-11                   # [OPT, DEF=1e-11] Relative tolerance of the nodal projection
#nodal_proj.atol = 1.0e-12                   # [OPT, DEF=1e-14] Absolute tolerance of the nodal projection
#nodal_proj.mg_max_coarsening_level = 5      # [OPT, DEF=100] Maximum number of MG levels (useful when using EB)

#mac_proj.verbose = 1                        # [OPT, DEF=0] Verbose of the MAC projector
#mac_proj.rtol = 1.0e-11                     # [OPT, DEF=1e-11] Relative tolerance of the MAC projection
#mac_proj.atol = 1.0e-12                     # [OPT, DEF=1e-14] Absolute tolerance of the MAC projection
#mac_proj.mg_max_coarsening_level = 5        # [OPT, DEF=100] Maximum number of MG levels (useful when using EB)

diffusion.verbose = 2                        # [OPT, DEF=0] Verbose of the scalar diffusion solve
#diffusion.rtol = 5.0e-2                     # [OPT, DEF=1e-11] Relative tolerance of the scalar diffusion solve
#diffusion.atol = 1.0e-12                    # [OPT, DEF=1e-14] Absolute tolerance of the scalar diffusion solve
#diffusion.bottom_solver = "hypre"            # Diffusion solver used by MLMG ["bicgstab", "cg", "cgbicg", "bicgcg", "petsc", "hypre", "smoother"]

#tensor_diffusion.verbose = 1                # [OPT, DEF=0] Verbose of the velocity tensor diffusion solve
#tensor_diffusion.rtol = 1.0e-11             # [OPT, DEF=1e-11] Relative tolerance of the velocity tensor diffusion solve
#tensor_diffusion.atol = 1.0e-12             # [OPT, DEF=1e-14] Absolute tolerance of the velocity tensor diffusion solve

#--------------------DERIVED DIAGNOSTICS---------------------------------------
peleLM.fuel_name = H2
peleLM.mixtureFraction.format = Cantera
peleLM.mixtureFraction.type   = mass
peleLM.mixtureFraction.oxidTank = O2:0.233 N2:0.767
peleLM.mixtureFraction.fuelTank = H2:1.0

#--------------------REFINEMENT CONTROL----------------------------------------
amr.refinement_indicators = overZ overHRR overMagVort inlet lowerWall overMagVortHigh

#amr.inner.max_level = 1
#amr.inner.value_less = 10E-3
#amr.inner.field_name = z

amr.inlet.max_level = 1
amr.inlet.in_box_lo =  -1    -1   -1
amr.inlet.in_box_hi = 0.0    +1   4.5E-3

amr.upperWall.max_level =  2
amr.upperWall.in_box_lo = -1   -1   5.9E-3
amr.upperWall.in_box_hi = +1   +1   6E-3

amr.lowerWall.max_level = 2
amr.lowerWall.in_box_lo = -1  -5.000E-3   -1
amr.lowerWall.in_box_hi = +1   5.000E-3   5E-4

amr.overZ.max_level = 1
amr.overZ.value_greater = 1E-3
amr.overZ.field_name = mixture_fraction
#amr.overZ.in_box_lo = -0.5E-3    -1      -1
#amr.overZ.in_box_hi = +6E-3   +4.5E-3   +1

amr.overHRR.max_level = 2
amr.overHRR.value_greater = 4E10
amr.overHRR.field_name = HeatRelease

amr.overMagVort.max_level = 2
amr.overMagVort.value_greater = 8E5
amr.overMagVort.field_name = mag_vort

amr.overMagVortHigh.max_level = 3
amr.overMagVortHigh.value_greater = 8E5
amr.overMagVortHigh.field_name = mag_vort


#amr.bottomWall.max_level = 2
#amr.bottomWall.field_name = HeatRelease
#amr.bottomWall.in_box_lo = -0.3E-3    -1      -1
#amr.bottomWall.in_box_hi = +10.0E-3   +4.5E-3   +1

#amr.overYH2.max_level = 3
#amr.overYH2.value_greater = 1E-3
#amr.overYH2.field_name = Y(H2)

#amr.diffYH2.max_level = 3
#amr.diffYH2.adjacent_difference_greater = 0.01
#amr.diffYH2.field_name = Y(H2)

#amr.diffRho.max_level = 1
#amr.diffRho.adjacent_difference_greater = 0.8
#amr.diffRho.field_name = density

#amr.diffXvel.max_level = 3
#amr.diffXvel.adjacent_difference_greater = 100
#amr.diffXvel.field_name = x_velocity

#amrex.fpe_trap_invalid = 1
#amrex.fpe_trap_zero = 1
#amrex.fpe_trap_overflow = 1
#
#
#ode.clean_init_massfrac = 0
peleLM.floor_species = 1

